parameters:
  projectName: ''
  projectRoot: ''
  buildVersion: ''
  buildConfiguration: ''

steps:
  - task: DotNetCoreCLI@2
    displayName: 'Restore Nuget packages for ${{ parameters.projectName }} project'
    inputs:
      command: 'restore'
      noCache: true
      projects: 'src/${{ parameters.projectName }}/${{ parameters.projectName }}.csproj'
      feedsToUse: 'select'
      vstsFeed: '$(VSTS_FEED)'

  # - task: DotNetCoreCLI@2
  #   displayName: 'Run tests on all .net core test projects'
  #   inputs:
  #     command: test
  #     projects: '**/*Tests*.csproj'
  #     arguments: '--configuration  $(BuildConfiguration) --collect "Code coverage"'

  # publish .net core web projects artifacts
  - task: DotNetCoreCLI@2
    displayName: 'Pack ${{ parameters.projectName }} project'
    inputs:
      command: 'custom'
      custom: 'pack'
      projects: 'src/${{ parameters.projectName }}/${{ parameters.projectName }}.csproj'
      arguments: >-
        --interactive 
        --output "$(Build.ArtifactStagingDirectory)"
        /p:Configuration=${{ parameters.buildConfiguration }} 
        /p:AssemblyVersion=${{ parameters.buildVersion }} 
        /p:PackageVersion="${{ parameters.buildVersion }}" 

  - task: DotNetCoreCLI@2
    displayName: 'Publish ${{ parameters.projectName }} nuget package'
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/${{ parameters.projectName }}*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: '$(VSTS_FEED)'